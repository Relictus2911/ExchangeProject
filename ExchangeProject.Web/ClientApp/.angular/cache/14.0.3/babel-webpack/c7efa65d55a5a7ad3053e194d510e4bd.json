{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../exchange/exchange.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/datepicker\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/card\";\n\nfunction ExchangeFormComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3.code, \" \");\n  }\n}\n\nfunction ExchangeFormComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const rate_r4 = ctx.ngIf;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Exchange rate is \", rate_r4.rate, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" per \", rate_r4.currency.amount, \" \", rate_r4.currency.code, \"\");\n  }\n}\n\nexport class ExchangeFormComponent {\n  constructor(exchangeService) {\n    this.exchangeService = exchangeService;\n    this.exchangeForm = new FormGroup({\n      currency: new FormControl(null),\n      date: new FormControl(new Date())\n    });\n  }\n\n  ngOnInit() {\n    this.firstAvailableDate$ = this.exchangeService.getFirstExistingDate();\n    this.lastAvailableDate$ = this.exchangeService.getLastxistingDate();\n    this.options$ = this.exchangeService.getAllCurrencies();\n    this.exchangeForm.valueChanges.subscribe(values => {\n      if (values.currency && values.date) {\n        this.rate$ = this.exchangeService.getSelectedExchangeRate(values.currency.code, values.date);\n      }\n    });\n  }\n\n}\n\nExchangeFormComponent.ɵfac = function ExchangeFormComponent_Factory(t) {\n  return new (t || ExchangeFormComponent)(i0.ɵɵdirectiveInject(i1.ExchangeService));\n};\n\nExchangeFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExchangeFormComponent,\n  selectors: [[\"app-exchange-form\"]],\n  decls: 23,\n  vars: 15,\n  consts: [[1, \"main\"], [1, \"example-form\", 3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"formControlName\", \"currency\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\", \"min\", \"max\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function ExchangeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Currency\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-select\", 3);\n      i0.ɵɵtemplate(6, ExchangeFormComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"Choose a date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementStart(14, \"mat-hint\");\n      i0.ɵɵtext(15, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"mat-datepicker-toggle\", 6)(17, \"mat-datepicker\", null, 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"mat-card\")(20, \"mat-card-content\");\n      i0.ɵɵtemplate(21, ExchangeFormComponent_ng_container_21_Template, 6, 3, \"ng-container\", 8);\n      i0.ɵɵpipe(22, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(18);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.exchangeForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 7, ctx.options$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"matDatepicker\", _r1)(\"min\", i0.ɵɵpipeBind1(12, 9, ctx.firstAvailableDate$))(\"max\", i0.ɵɵpipeBind1(13, 11, ctx.lastAvailableDate$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"for\", _r1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(22, 13, ctx.rate$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatFormField, i3.MatHint, i3.MatLabel, i4.MatDatepicker, i4.MatDatepickerInput, i4.MatDatepickerToggle, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.MatInput, i7.MatSelect, i8.MatOption, i9.MatCard, i9.MatCardContent, i2.AsyncPipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 531:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(12:7) C:\\\\\\\\Users\\\\\\\\Relic\\\\\\\\source\\\\\\\\repos\\\\\\\\ExchangeProject.Web\\\\\\\\ClientApp\\\\\\\\src\\\\\\\\app\\\\\\\\exchange-form\\\\\\\\exchange-form.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 10 | \\\\u001b[39m\\\\n \\\\u001b[90m 11 | \\\\u001b[39m  \\\\u001b[33m.main\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 12 | \\\\u001b[39m      display flex\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m      \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 13 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 14 | \\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[531]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=exchange-form.component.css.map*/\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,gBAAvC;;;;;;;;;;;;;;ICKQC;IACEA;IACFA;;;;;IAFoDA;IAClDA;IAAAA;;;;;;IAmBJA;IACEA,4BAAK,CAAL,EAAK,GAAL;IACKA;IAA8BA;IACjCA;IAAIA;IAAmDA;IAG3DA;;;;;IAJOA;IAAAA;IACCA;IAAAA;;;;ADnBd,OAAM,MAAOC,qBAAP,CAA4B;EAO9BC,YACYC,eADZ,EAC4C;IAAhC;IANZ,oBAAe,IAAIJ,SAAJ,CAAc;MACzBK,QAAQ,EAAE,IAAIN,WAAJ,CAAkC,IAAlC,CADe;MAEzBO,IAAI,EAAE,IAAIP,WAAJ,CAAsB,IAAIQ,IAAJ,EAAtB;IAFmB,CAAd,CAAf;EAOK;;EAQLC,QAAQ;IAEJ,KAAKC,mBAAL,GAA2B,KAAKL,eAAL,CAAqBM,oBAArB,EAA3B;IACA,KAAKC,kBAAL,GAA0B,KAAKP,eAAL,CAAqBQ,kBAArB,EAA1B;IACA,KAAKC,QAAL,GAAgB,KAAKT,eAAL,CAAqBU,gBAArB,EAAhB;IACA,KAAKC,YAAL,CAAkBC,YAAlB,CAA+BC,SAA/B,CAA0CC,MAAD,IAAW;MAChD,IAAIA,MAAM,CAACb,QAAP,IAAmBa,MAAM,CAACZ,IAA9B,EAAoC;QAChC,KAAKa,KAAL,GAAa,KAAKf,eAAL,CAAqBgB,uBAArB,CAA6CF,MAAM,CAACb,QAAP,CAAgBgB,IAA7D,EAAmEH,MAAM,CAACZ,IAA1E,CAAb;MACH;IACJ,CAJD;EAKH;;AA3B6B;;;mBAArBJ,uBAAqBD;AAAA;;;QAArBC;EAAqBoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlCzB,+BAAkB,CAAlB,EAAkB,MAAlB,EAAkB,CAAlB,EAAkB,CAAlB,EAAkB,gBAAlB,EAAkB,CAAlB,EAAkB,CAAlB,EAAkB,WAAlB;MAIiBA;MAAQA;MACnBA;MACEA;;MAGFA;MAEFA,0CAA6D,CAA7D,EAA6D,WAA7D;MACaA;MAAaA;MACxBA;;;MAKAA;MAAUA;MAAUA;MACpBA,6CAA4E,EAA5E,EAA4E,gBAA5E,EAA4E,IAA5E,EAA4E,CAA5E;MAEFA;MAGFA,kCAAU,EAAV,EAAU,kBAAV;MAEIA;;MAOFA;;;;;;MA/BIA;MAAAA;MAI+BA;MAAAA;MAQ1BA;MAAAA,oCAAwB,KAAxB,EAAwBA,8CAAxB,EAAwB,KAAxB,EAAwBA,8CAAxB;MAK8BA;MAAAA;MAOtBA;MAAAA","names":["FormControl","FormGroup","i0","ExchangeFormComponent","constructor","exchangeService","currency","date","Date","ngOnInit","firstAvailableDate$","getFirstExistingDate","lastAvailableDate$","getLastxistingDate","options$","getAllCurrencies","exchangeForm","valueChanges","subscribe","values","rate$","getSelectedExchangeRate","code","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Relic\\source\\repos\\ExchangeProject.Web\\ClientApp\\src\\app\\exchange-form\\exchange-form.component.ts","C:\\Users\\Relic\\source\\repos\\ExchangeProject.Web\\ClientApp\\src\\app\\exchange-form\\exchange-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subject, map, startWith, switchMap } from 'rxjs';\nimport { ExchangeService, ICurrency, IExchangeRate } from '../exchange/exchange.service';\n\n@Component({\n    selector: 'app-exchange-form',\n    templateUrl: './exchange-form.component.html',\n    styleUrls: ['./exchange-form.component.css']\n})\nexport class ExchangeFormComponent implements OnInit {\n\n    exchangeForm = new FormGroup({\n        currency: new FormControl<ICurrency | null>(null),\n        date: new FormControl<Date>(new Date())\n    });\n\n    constructor(\n        private exchangeService: ExchangeService\n    ) { }\n\n    options$!: Observable<ICurrency[]>;\n    rate$!: Observable<IExchangeRate>;\n\n    firstAvailableDate$!: Observable<Date>;\n    lastAvailableDate$!: Observable<Date>;\n\n    ngOnInit() {\n\n        this.firstAvailableDate$ = this.exchangeService.getFirstExistingDate();\n        this.lastAvailableDate$ = this.exchangeService.getLastxistingDate();\n        this.options$ = this.exchangeService.getAllCurrencies();\n        this.exchangeForm.valueChanges.subscribe((values) => {\n            if (values.currency && values.date) {\n                this.rate$ = this.exchangeService.getSelectedExchangeRate(values.currency.code, values.date)\n            }\n        });\n    }\n}\n","<div class=\"main\">\n\n  <form [formGroup]=\"exchangeForm\" class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Currency</mat-label>\n      <mat-select formControlName=\"currency\">\n        <mat-option *ngFor=\"let option of options$ | async\" [value]=\"option\">\n          {{option.code}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\" class=\"example-full-width\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput\n             [matDatepicker]=\"picker\"\n             [min]=\"firstAvailableDate$ | async\"\n             [max]=\"lastAvailableDate$ | async\"\n             formControlName=\"date\">\n      <mat-hint>MM/DD/YYYY</mat-hint>\n      <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n  </form>\n\n  <mat-card>\n    <mat-card-content>\n      <ng-container *ngIf=\"rate$ | async as rate\">\n        <div>\n          <p>Exchange rate is {{rate.rate}}</p>\n          <p> per {{rate.currency.amount}} {{rate.currency.code}}</p>\n\n        </div>\n      </ng-container>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n"]},"metadata":{},"sourceType":"module"}