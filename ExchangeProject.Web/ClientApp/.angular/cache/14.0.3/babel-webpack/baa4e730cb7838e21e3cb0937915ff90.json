{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/datepicker\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/input\";\n\nfunction ExchangeFormComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r3, \" \");\n  }\n}\n\nexport class ExchangeFormComponent {\n  constructor() {\n    this.myControl = new FormControl('');\n    this.dateControl = new FormControl('');\n    this.options = ['One', 'Two', 'Three'];\n    this.lel = 'fff';\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value || '')));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  clearFilter() {\n    this.filteredOptions.pipe(switchMap(value => this.options));\n  }\n\n}\n\nExchangeFormComponent.ɵfac = function ExchangeFormComponent_Factory(t) {\n  return new (t || ExchangeFormComponent)();\n};\n\nExchangeFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExchangeFormComponent,\n  selectors: [[\"app-exchange-form\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"example-form\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\", 3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [3, \"value\"]],\n  template: function ExchangeFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"kek\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3, \"kek\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 0)(7, \"mat-form-field\", 1)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 2);\n      i0.ɵɵelementStart(11, \"mat-autocomplete\", 3, 4);\n      i0.ɵɵlistener(\"optionSelected\", function ExchangeFormComponent_Template_mat_autocomplete_optionSelected_11_listener() {\n        return ctx.clearFilter;\n      });\n      i0.ɵɵtemplate(13, ExchangeFormComponent_mat_option_13_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 6)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Choose a date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 7);\n      i0.ɵɵelementStart(19, \"mat-hint\");\n      i0.ɵɵtext(20, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"mat-datepicker-toggle\", 8)(22, \"mat-datepicker\", null, 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\");\n      i0.ɵɵtext(25, \"kek\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(12);\n\n      const _r2 = i0.ɵɵreference(23);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.lel);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 6, ctx.filteredOptions));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"matDatepicker\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"for\", _r2);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.MatFormField, i2.MatHint, i2.MatLabel, i3.MatAutocomplete, i3.MatAutocompleteTrigger, i4.MatOption, i5.MatDatepicker, i5.MatDatepickerInput, i5.MatDatepickerToggle, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgForm, i6.FormControlDirective, i7.MatInput, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleGNoYW5nZS1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,MAAtD;;;;;;;;;;;;ICYQC;IACEA;IACFA;;;;;IAF2DA;IACzDA;IAAAA;;;;ADNV,OAAM,MAAOC,qBAAP,CAA4B;EAE9BC;IAEA,iBAAY,IAAIN,WAAJ,CAAgB,EAAhB,CAAZ;IACA,mBAAc,IAAIA,WAAJ,CAAgB,EAAhB,CAAd;IACA,eAAoB,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAApB;IAEA,WAAc,KAAd;EANiB;;EAQjBO,QAAQ;IACJ,KAAKC,eAAL,GAAuB,KAAKC,SAAL,CAAeC,YAAf,CAA4BC,IAA5B,CACnBT,SAAS,CAAC,EAAD,CADU,EAEnBD,GAAG,CAACW,KAAK,IAAI,KAAKC,OAAL,CAAaD,KAAK,IAAI,EAAtB,CAAV,CAFgB,CAAvB;EAIH;;EAEOC,OAAO,CAACD,KAAD,EAAc;IACzB,MAAME,WAAW,GAAGF,KAAK,CAACG,WAAN,EAApB;IAEA,OAAO,KAAKC,OAAL,CAAaC,MAAb,CAAoBC,MAAM,IAAIA,MAAM,CAACH,WAAP,GAAqBI,QAArB,CAA8BL,WAA9B,CAA9B,CAAP;EACH;;EAEOM,WAAW;IACf,KAAKZ,eAAL,CAAqBG,IAArB,CACIR,SAAS,CAACS,KAAK,IAAI,KAAKI,OAAf,CADb;EAGH;;AA3B6B;;;mBAArBX;AAAqB;;;QAArBA;EAAqBgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTlCrB;MAAKA;MAAGA;MACRA;MAAKA;MAAGA;MACRA;MAAKA;MAAOA;MAEZA,gCAA2B,CAA3B,EAA2B,gBAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,WAA3B;MAEiBA;MAAMA;MACjBA;MAMAA;MAAgEA;QAAA;MAAA;MAC9DA;;MAGFA;MAEFA,2CAAkC,EAAlC,EAAkC,WAAlC;MACeA;MAAaA;MACxBA;MACAA;MAAUA;MAAUA;MACpBA,6CAA4E,EAA5E,EAA4E,gBAA5E,EAA4E,IAA5E,EAA4E,CAA5E;MAEFA;MAENA;MAAKA;MAAGA;;;;;;;;MAzBHA;MAAAA;MASQA;MAAAA,4CAAyB,iBAAzB,EAAyBsB,GAAzB;MAG0BtB;MAAAA;MAOfA;MAAAA;MAEqBA;MAAAA","names":["FormControl","map","startWith","switchMap","i0","ExchangeFormComponent","constructor","ngOnInit","filteredOptions","myControl","valueChanges","pipe","value","_filter","filterValue","toLowerCase","options","filter","option","includes","clearFilter","selectors","decls","vars","consts","template","_r0"],"sourceRoot":"","sources":["C:\\Users\\Relic\\source\\repos\\ExchangeProject.Web\\ClientApp\\src\\app\\exchange-form\\exchange-form.component.ts","C:\\Users\\Relic\\source\\repos\\ExchangeProject.Web\\ClientApp\\src\\app\\exchange-form\\exchange-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, map, startWith, switchMap } from 'rxjs';\n\n@Component({\n    selector: 'app-exchange-form',\n    templateUrl: './exchange-form.component.html',\n    styleUrls: ['./exchange-form.component.css']\n})\nexport class ExchangeFormComponent implements OnInit {\n\n    constructor() { }\n\n    myControl = new FormControl('');\n    dateControl = new FormControl('');\n    options: string[] = ['One', 'Two', 'Three'];\n    filteredOptions!: Observable<string[]>;\n    lel: string = 'fff';\n\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges.pipe(\n            startWith(''),\n            map(value => this._filter(value || '')),\n        );\n    }\n\n    private _filter(value: string): string[] {\n        const filterValue = value.toLowerCase();\n\n        return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n    private clearFilter(){\n        this.filteredOptions.pipe(\n            switchMap(value => this.options)\n        );\n    }\n}\n","<div>kek</div>\n<div>kek</div>\n<div>{{lel}}</div>\n\n<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Number</mat-label>\n      <input type=\"text\"\n             placeholder=\"Pick one\"\n             aria-label=\"Number\"\n             matInput\n             [formControl]=\"myControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" (optionSelected)=\"clearFilter\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"picker\">\n        <mat-hint>MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n</form>\n<div>kek</div>\n"]},"metadata":{},"sourceType":"module"}